# SPDX-FileCopyrightText: 2024 Deutsche Telekom AG
#
# SPDX-License-Identifier: CC0-1.0
[project]
name = "wurzel"

version = "1.0.0-dev.2"

description = "Pick, choose and chain your RAG tools in a pythonic way"
authors = [
    {name ="Thomas Weigel", email="thomas.weigel@telekom.de"},
    {name ="Paul Bauriegel", email="paul.bauriegel@telekom.de"},
    {name ="Maximilian Erren", email="maximilian.erren@telekom.de"}
]
readme = "README.md"
requires-python = ">= 3.11, < 3.13"

license = {file = "LICENSES/Apache-2.0.txt"}
classifiers = [
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Topic :: Internet',
    'Topic :: Scientific/Engineering :: Information Analysis',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Software Development :: Pre-processors',
    'Topic :: Software Development :: Version Control',
]
dependencies= [
    "tqdm==4.66.5",
    "pandas==2.2.2",
    "numpy < 2.0.0",
    "dvc==3.53.1",
    "Markdown==3.6",
    "pydantic-settings==2.5.2",
    "pydantic>=2.6.4, == 2.*",
    "asgi-correlation-id>=4.3.1, == 4.*",
    "langchain-core>=0.2.0",
    "prometheus-client==0.21.1",
    "mistletoe==1.4.0",
    "pandera==0.20.3",
    "mdformat==0.7.17",
    "spacy==3.7.5",
    "tiktoken==0.7.0",
    "joblib>=1.4.0",
    "lxml==5.2.*",
    "marshmallow<4.0.0",
]

[project.optional-dependencies]
qdrant = [
    "qdrant-client==1.10.1"
]
docling = [
    "docling==2.30.0"
]
milvus = [
    "pymilvus==2.4.4",
]

# TLSH (Trend Micro Locality Sensitive Hash)
# Note: Official TLSH repo: https://github.com/trendmicro/tlsh
# - The latest release (4.12.0) requires installation from source, which fails.
# - https://pypi.org/project/python-tlsh/ is unmaintained; latest (4.5.0) does not work on Windows.
# - https://pypi.org/project/py-tlsh/ is also unmaintained; latest (4.7.2) works on win & mac & ubuntu.
tlsh = [
    "py-tlsh==4.7.2"
]
lint = [
    "pylint[spelling]==3.3.7",
    "pylint-json2html==0.5.0",
    "pre-commit==4.1.*",
    "reuse==5.0.2",
    "ruff==0.9.10",
]
test = [
    "pytest==8.4.*",
    "pytest-asyncio==0.23.*",
    "pytest-cov==4.*",
    "pytest-html==4.*",
    "pytest_env==1.*",
    "pytest-xdist==3.*",
    "pytest-mock==3.*",
    "requests-mock==1.*",
    #"milvus-lite==2.*", # used for miluvs mock no support for windows https://github.com/milvus-io/milvus-lite/issues/176
]

docs = [
    "mkdocstrings[python]"
]

all = ["wurzel[qdrant,milvus,tlsh,docling]"]
dev = ["wurzel[lint,test,all]"]

[build-system]
requires = ["setuptools>=78.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["wurzel*"]
namespaces = false

[tool.setuptools.package-data]
wurzel = ["data/*", "utils/to_markdown/*"]



[tool.mypy]
python_version = "3.11 | 3.12"
disable_error_code = ["import-untyped"]
[tool.pylint.'MESSAGES CONTROL']
max-line-length = 140
max-locals = 18
max-returns = 10
max-args = 10
min-public-methods = 0
disable = "W1203, C0114"
[tool.setuptools.dynamic]
version = {file = "VERSION"}
[project.scripts]
wurzel = "wurzel.cli._main:main"

[project.urls]
"Release notes" = "https://github.com/telekom/wurzel/releases/"
Source = "https://github.com/telekom/wurzel"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m pip install build; python -m build"
tag_format = "{version}"

[tool.semantic_release.commit_parser_options]
major_types = ["breaking"]
minor_types = ["feat", "feature"]
patch_types = ["fix", "perf", "hotfix", "patch"]
allowed_tags = ["feat","feature", "fix", "hotfix", "perf", "patch", "build", "chore", "ci", "docs", "style", "refactor", "ref", "test"]
default_bump_level = 0

[tool.semantic_release.branches.main]
match = "(main)"
prerelease = false

[tool.semantic_release.branches.dev]
match = "^(?!main$).+"
prerelease = true
prerelease_token = "dev"


[tool.ruff]

target-version = "py39"
line-length = 140

[tool.ruff.lint]
select = [
    "F",  # pyflakes rules,
    "I",  # sorting for imports
    "E",  # formatting
    "D",  # formatting for docs (disabled)
    "UP", # upgrade to latest syntax if possible
    "C4", # cleaner comprehensions
]

ignore = [
    "D401", # First line of docstring should be in imperative mood
    "D100",# Missing docstring in public module #TODO:
    "D104", # Missing docstring in public package #TODO:
    "D105", # Missing docstring in magic method #TODO:
    "D102",  #Missing docstring in public method #TODO:
    "D417", # Missing argument description in the docstring for `__init__`: `defaults` #TODO:
    "D107", # Missing docstring in `__init__` #TODO:
    "D103", # Missing docstring in public function #TODO:
    "D101",  #Missing docstring in public class #TODO:
    "D205", #1 blank line required between summary line and description
    "D211", # `incorrect-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D213", #`multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible.
    "D203", #cause conflicts when used with the formatter
]

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

skip-magic-trailing-comma = false

line-ending = "auto"
