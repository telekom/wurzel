on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  publish-to-pypi:
    name: >-
      PyPi Release
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/wurzel  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
  github-release:
    name: >-
      Sign distribution --> GitHub Release
    runs-on: ubuntu-latest
    needs: publish-to-pypi
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
      GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        "$(cat VERSION)"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
      GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$(cat VERSION)" dist/**
        --repo "$GITHUB_REPOSITORY"
    